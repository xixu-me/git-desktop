name: Automated Build on Release Branch

on:
  push:
    branches:
      - 'releases/*'
  workflow_dispatch:
    inputs:
      skip_tests:
        description: 'Skip tests (for faster builds)'
        required: false
        type: boolean
        default: false

env:
  NODE_VERSION: 22.14.0

jobs:
  detect-version:
    name: Detect Version from Branch
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract.outputs.version }}
      channel: ${{ steps.extract.outputs.channel }}
      should_build: ${{ steps.extract.outputs.should_build }}
    steps:
      - name: Extract version from branch name
        id: extract
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          echo "Branch name: $BRANCH_NAME"
          
          # Extract version from branch name (e.g., releases/1.0.0-beta1)
          if [[ "$BRANCH_NAME" =~ ^releases/(.+)$ ]]; then
            VERSION="${BASH_REMATCH[1]}"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "should_build=true" >> $GITHUB_OUTPUT
            
            # Determine channel based on version
            if [[ "$VERSION" =~ -beta ]]; then
              echo "channel=beta" >> $GITHUB_OUTPUT
            elif [[ "$VERSION" =~ -test ]]; then
              echo "channel=test" >> $GITHUB_OUTPUT
            else
              echo "channel=production" >> $GITHUB_OUTPUT
            fi
          else
            echo "should_build=false" >> $GITHUB_OUTPUT
          fi

  build:
    name: Build Release
    needs: detect-version
    if: ${{ needs.detect-version.outputs.should_build == 'true' }}
    uses: ./.github/workflows/ci.yml
    with:
      repository: ${{ github.repository }}
      ref: ${{ github.ref }}
      environment: ${{ needs.detect-version.outputs.channel }}
      upload-artifacts: true
      sign: true
    secrets: inherit

  create-draft-release:
    name: Create Draft Release
    runs-on: ubuntu-latest
    needs: [detect-version, build]
    if: ${{ needs.detect-version.outputs.should_build == 'true' && needs.detect-version.outputs.channel == 'production' }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-artifacts
          
      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          find dist-artifacts -type f \( -name "*.zip" -o -name "*.exe" -o -name "*.msi" -o -name "*.nupkg" \) -exec cp {} release-assets/ \;
          
      - name: Create draft release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: release-${{ needs.detect-version.outputs.version }}
          name: Git Desktop ${{ needs.detect-version.outputs.version }}
          body: |
            ## Git Desktop ${{ needs.detect-version.outputs.version }}
            
            **This is a draft release. Please review and publish manually.**
            
            ### Downloads
            - **Windows x64:** `GitHubDesktopSetup-x64.exe`, `GitHubDesktopSetup-x64.msi`
            - **Windows ARM64:** `GitHubDesktopSetup-arm64.exe`, `GitHubDesktopSetup-arm64.msi`
            - **macOS x64:** `Git Desktop-x64.zip`
            - **macOS ARM64:** `Git Desktop-arm64.zip`
          files: release-assets/*
          draft: true
          prerelease: false
